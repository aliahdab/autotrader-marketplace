
# 🚗 Car Marketplace (AutoTrader Clone)

Welcome to the official repository for the **Car Marketplace** project — a full-stack, multilingual marketplace for buying and selling cars, inspired by AutoTrader and built primarily for the Syrian market.

---

## 📌 Project Description
This project provides a scalable and modern platform where users can:
- Browse, list, and filter car listings
- Search based on location, price, model, etc.
- Register/login (JWT + OAuth2)
- Upload car images
- Multilingual support (Arabic/English)
- Admin approval system for listings
- Future support for payments, promotions, and social logins

## 🏛️ Tech Stack
### Frontend:
- **React.js** (+ TailwindCSS)
- **Axios** for API calls
- **i18next** for multilingual support
- **Cypress** for E2E testing

### Backend:
- **Java 21**, **Spring Boot 3**
- **Spring Security**, **JWT**, **OAuth2**
- **PostgreSQL** for data persistence
- **Redis** (future caching)
- **Elasticsearch** (future search)
- **Spring Cloud Gateway** (MCP)

### Infrastructure:
- **Docker** & **Docker Compose**
- **Nginx** (SSL termination)
- **Cloudinary** for image hosting
- **Prometheus + Grafana** for monitoring (future)

## 📂 Project Structure
```
car-marketplace/
├── docs/                # Project documentation (system design, testing, roadmap)
├── frontend/            # React frontend
├── backend/             # Spring Boot microservices and MCP gateway
├── deployments/         # Docker Compose & Kubernetes manifests
├── scripts/             # DB setup, tools
├── docker-compose.yml   # Development environment orchestration
└── README.md
```

For detailed structure, see `docs/folder_structure.md`.

## 🚀 Getting Started

### 1. Prerequisites
- Java 21
- Node.js 18+
- Docker & Docker Compose
- PostgreSQL (optional if running manually)

### 2. Clone the repository
```bash
git clone https://github.com/yourname/car-marketplace.git
cd car-marketplace
```

### 3. Running Locally (Simple)
```bash
docker-compose up --build
```

Frontend available at: `http://localhost:3000`
MCP API Gateway available at: `http://localhost:8080`

### 4. Environment Variables
Create a `.env` file:
```
# Backend
JWT_SECRET=your_jwt_secret
DB_URL=jdbc:postgresql://db:5432/marketplace
DB_USER=postgres
DB_PASSWORD=password

# Frontend
NEXT_PUBLIC_API_BASE_URL=http://localhost:8080/api
```

## 📚 Documentation
- [System Design](docs/system_design.md)
- [Roadmap](docs/roadmap.md)
- [Testing Plan](docs/testing_plan.md)
- [Folder Structure](docs/folder_structure.md)

## 🤝 Contribution
- Fork the repository
- Create a new branch (`feature/your-feature-name`)
- Commit your changes
- Open a Pull Request

## 📜 License
**MIT License** — free for personal and commercial use.

---

### ✨ Future Goals
- Mobile app with React Native
- Push notifications
- AI-based model detection from images

---

> "Built to drive the future of the Syrian car marketplace!" 🚀
